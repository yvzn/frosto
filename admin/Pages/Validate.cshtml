@page "{id}"
@model admin.ValidateModel
@{
	ViewData["Title"] = "Edit Location";
}

<div class="row">
	<form method="get" class="col-lg-6 p-5 mb-5 mb-lg-0">
		<h2 class="text-muted mb-3">Location</h2>
		<div class="form-group mb-3">
			<label asp-for="Location.city" class="form-label"></label>
			<div class="input-group">
				<input asp-for="Location.city" class="form-control" disabled readonly />
				<a class="btn btn-outline-secondary"
					href="https://www.google.com/maps/place/@Model.Location.city.Trim(),+@Model.Location.country.Trim()/"
					target="_blank" rel="noopener noreferrer">Search</a>
			</div>
			<span asp-validation-for="Location.city" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="Location.country" class="form-label"></label>
			<input asp-for="Location.country" class="form-control" disabled readonly />
			<span asp-validation-for="Location.country" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="Location.coordinates" class="form-label"></label>
			<input asp-for="Location.coordinates" class="form-control" disabled readonly />
			<span asp-validation-for="Location.coordinates" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="Location.users" class="form-label"></label>
			<input asp-for="Location.users" class="form-control" disabled readonly />
			<span asp-validation-for="Location.users" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="Location.channel" class="form-label"></label>
			<input asp-for="Location.channel" class="form-control" disabled readonly />
		</div>

		<button type="submit" class="btn btn-outline-secondary ">Reset</button>
	</form>

	<form method="post" class="col-lg-6 p-5 mb-5 border rounded-3 bg-light">
		<h2 class="text-muted mb-3">Valid location</h2>

		<div class="form-group mb-3">
			<label asp-for="ValidLocation.city" class="form-label"></label>
			<div class="input-group">
				<input asp-for="ValidLocation.city" class="form-control" id="valid-location-city" />
				<div class="input-group-text" id="valid-location-verification-result">
					@if (Model.ValidLocationExists)
					{
						<span class="text-danger fs-6">exists</span>
					}
					else
					{
						<span class="text-success fs-6">new</span>
					}
				</div>
			</div>
			<span asp-validation-for="ValidLocation.city" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="ValidLocation.country" class="form-label"></label>
			<input asp-for="ValidLocation.country" class="form-control" list="country-names"
				id="valid-location-country" />
			<span asp-validation-for="ValidLocation.country" class="text-danger"></span>

			<datalist id="country-names">
				@foreach (var country in Model.CountryList)
				{
					<option value="@country"></option>
				}
			</datalist>
		</div>
		<div class="form-group mb-3">
			<label asp-for="ValidLocation.coordinates" class="form-label"></label>
			<input asp-for="ValidLocation.coordinates" class="form-control" id="valid-location-coordinates" />
			<span asp-validation-for="ValidLocation.coordinates" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="ValidLocation.users" class="form-label"></label>
			<input asp-for="ValidLocation.users" class="form-control" />
			<span asp-validation-for="ValidLocation.users" class="text-danger"></span>
		</div>
		<div class="form-group mb-3">
			<label asp-for="ValidLocation.channel" class="form-label"></label>
			<select asp-for="ValidLocation.channel" asp-items="Model.ChannelOptions" class="form-select"></select>
		</div>

		<input asp-for="ValidLocation.Id" />
		<span asp-validation-for="ValidLocation.Id" class="text-danger"></span>
		<button type="submit" class="btn btn-primary">Submit</button>
	</form>

	<div hidden>
		@Html.ValidationSummary()
	</div>
</div>

<script>
	var cityInput = document.getElementById('valid-location-city');
	var countryInput = document.getElementById('valid-location-country');
	var verificationResult = document.getElementById('valid-location-verification-result');
	var cityCoordinates = document.getElementById('valid-location-coordinates');

	cityInput.addEventListener('change', onChangeCity);
	countryInput.addEventListener('change', onChangeCity);

	function onChangeCity() {
		verificationResult.innerHTML = '<span class="spinner-border spinner-border-sm fs-6 p-2">&nbsp;</span>';
		getLocation(cityInput.value, countryInput.value)
			.then(
				notifyDuplicatedEntity,
				notifyUniqueEntity
			);
	}

	function notifyDuplicatedEntity() {
		verificationResult.innerHTML = '<span class="text-danger fs-6">exists</span>';
	}

	function notifyUniqueEntity() {
		verificationResult.innerHTML = '<span class="text-success fs-6">new</span>';
	}

	async function getLocation(city, country) {
		var apiUrl = `/api/location?city=${city}&country=${country}`;
		var response = await fetch(apiUrl);
		var json = await response.json();
		if (!response.ok) {
			throw new Error(response.status);
		}
		if (!json.id) {
			throw new Error(JSON.stringify(json));
		}
	}

	cityInput.addEventListener('click', pasteFromClipboard);
	cityCoordinates.addEventListener('click', pasteFromClipboard);

	function pasteFromClipboard(event) {
		navigator.clipboard.readText().then(text => {
			event.target.value = text
			event.target.dispatchEvent(new Event("change"));
		});
	}
</script>
